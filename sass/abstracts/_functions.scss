// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

@use 'variables' as *;

/// Returns a variable of the color based on name color and shade
/// @access public
/// @param {String} $color - color name (e.g. 'primary', 'accent'...)
/// @param {Number} $shade - shade value
/// @return {CSS var} (e.g. var(--clr-primary-400))
@function clr($color, $shade: 400) {
  @return var(--clr-#{$color}-#{$shade});
}

/// Returns a value in (px) converted to (rem)
/// @access public
/// @param {Number} $value - value in px
/// @return {Number}
/// @require $value
@function to-rem($value) {
  @return #{calc($value / 16)}rem;
}

/// Returns a value in (px) converted to (vw), given a view width as a
/// reference and the font size in px to these view width
/// @access public
/// @param {Number} $value - font size in px
/// @param {Number} $width - reference width in px
/// @return {Number}
/// @require $value
/// @require $width
@function to-view-width($value, $width: 768) {
  @return #{calc($value * 100 / $width)}vw;
}

/// Get a z-index value from a layer name
/// @access public
/// @param {String} $layer - Layer's name
/// @return {Number}
/// @require $z-indexes
@function z($layer) {
  @if not map-has-key($z-indexes, $layer) {
    @error 'There is no layer named `#{$layer}` in $z-indexes. '
         + 'Layer should be one of #{map-keys($z-indexes)}.';
  }

  @return map-get($z-indexes, $layer);
}

/// Returns the font size using the clamp function to make it responsive
/// @access public
/// @param {Number} $min - min font size in px
/// @param {Number} $max - max font size in px
/// @return {Function} - function clamp using the min and max value
/// @require $min
/// @require $max
@function minmax-font($min, $max) {
  @return clamp(to-rem($min), to-view-width(calc(($min + $max) / 2)), to-rem($max));
}
